{"version":3,"sources":["components/Config.js","_actions/user_actions.js","_actions/types.js","hoc/auth.js","components/views/LandingPage/FavBtn.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/FavouritePage/FavouritePage.js","components/views/SearchPage/Search.js","components/views/SearchPage/SearchPage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["API_KEY","API_URL","IMG_URL","auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","FavBtn","userFrom","movieInfo","movieId","useState","Favourite","setFavourite","variables","movieTitle","original_title","movieImage","poster_path","movieRating","vote_average","post","success","favourited","alert","Button","className","style","fontSize","onClick","color","LandingPage","Movies","setMovies","activePage","setActive","paginate","setPaginate","fetch","json","results","Row","lg","md","map","m","i","imgurl","key","Col","Card","boxShadow","Body","variant","backgroundImage","backgroundSize","backgroundRepeat","height","background","width","borderRadius","Text","id","localStorage","getItem","Pagination","Prev","disabled","p","document","body","scrollTop","documentElement","Item","active","activeLabel","Ellipsis","e","target","innerText","Next","length","withRouter","rememberMeChecked","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","border","padding","Form","Group","controlId","Control","value","onChange","onBlur","placeholder","Check","checked","label","href","float","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","image","moment","unix","registerUser","errmsg","minWidth","hasValidation","isValid","userData","Nav","Link","status","NavBar","Navbar","bg","expand","Container","Brand","alt","src","Toggle","aria-controls","Collapse","FavouritePage","fetchingQuery","Favourites","setFavourites","fetchFavourites","favourites","console","log","Search","setSearches","cq","useRef","fetchQuery","encodeURIComponent","current","ref","onFocus","setInterval","clearInterval","SearchPage","profile_path","media_type","known_for_department","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","match","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b279e8a.chunk.js","sourcesContent":["//SERVER ROUTES\r\nexport const USER_SERVER = \"/api/users\";\r\n\r\nexport const API_KEY = \"8a9a05ecf031c021e06116719b0063fe\";\r\n\r\nexport const API_URL = \"https://api.themoviedb.org/3/\";\r\n\r\nexport const IMG_URL = \"https://image.tmdb.org/t/p/\";\r\n","import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n    \r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { BsHeart, BsHeartFill } from \"react-icons/bs\";\r\nimport axios from \"axios\";\r\n\r\nfunction FavBtn({ userFrom, movieInfo, movieId }) {\r\n  const [Favourite, setFavourite] = useState(false);\r\n\r\n  let variables = {\r\n    userFrom: userFrom,\r\n    movieId: movieId,\r\n    movieTitle: movieInfo.original_title,\r\n    movieImage: movieInfo.poster_path,\r\n    movieRating: movieInfo.vote_average,\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.post(\"/api/favourite/favourited\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        setFavourite(response.data.favourited);\r\n      } else {\r\n        alert(\"Failed to get data\");\r\n      }\r\n    });\r\n  }, [variables]);\r\n\r\n  function onClickFavourite() {\r\n    if (Favourite) {\r\n      axios\r\n        .post(\"/api/favourite/removeFromFavorite\", variables)\r\n        .then((response) => {\r\n          if (response.data.success) {\r\n            // console.log(\"removed from favourites\");\r\n            setFavourite(!response.data.success);\r\n          } else {\r\n            alert(\"Something went wrong...\");\r\n          }\r\n        });\r\n    } else {\r\n      axios.post(\"/api/favourite/addToFavorite\", variables).then((response) => {\r\n        if (response.data.success) {\r\n          // console.log(\"added to favourites\");\r\n          setFavourite(response.data.success);\r\n        } else {\r\n          alert(\"Something went wrong...\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        className=\"fav-btn\"\r\n        style={{ fontSize: \"inherit\" }}\r\n        onClick={onClickFavourite}\r\n      >\r\n        {Favourite ? <BsHeartFill style={{ color: \"#F44336\" }} /> : <BsHeart />}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavBtn;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card, Col, Pagination, Row } from \"react-bootstrap\";\r\nimport { BsFillStarFill } from \"react-icons/bs\";\r\nimport { API_KEY, API_URL, IMG_URL } from \"../../Config.js\";\r\nimport FavBtn from \"./FavBtn\";\r\nfunction LandingPage() {\r\n  const [Movies, setMovies] = useState([]);\r\n  const [activePage, setActive] = useState(1);\r\n  const [paginate, setPaginate] = useState([2, 3, 4, 5]);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${activePage}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setMovies(response.results);\r\n      });\r\n  }, [activePage]);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"px-5 mb-4\">Popular movies</h3>\r\n      <div className=\"px-5 \">\r\n        <Row lg={5} md={4} className=\"g-4 \">\r\n          {Movies &&\r\n            Movies.map((m, i) => {\r\n              const imgurl = IMG_URL + \"w500\" + m.poster_path;\r\n\r\n              return (\r\n                <div key={i}>\r\n                  <Col>\r\n                    <Card\r\n                      style={{\r\n                        boxShadow:\r\n                          \"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\",\r\n                      }}\r\n                    >\r\n                      <div className=\"d-flex flex-column\">\r\n                        <Card.Body\r\n                          variant=\"top\"\r\n                          className=\"d-flex flex-column justify-content-between\"\r\n                          style={{\r\n                            backgroundImage: `url(${imgurl})`,\r\n                            backgroundSize: \"cover\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                            height: \"320px\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"px-2 d-flex align-items-center\"\r\n                            style={{\r\n                              background: \"#22A1B1\",\r\n                              width: \"max-content\",\r\n                              borderRadius: \"5px\",\r\n                            }}\r\n                          >\r\n                            <BsFillStarFill style={{ color: \"yellow\" }} />\r\n\r\n                            <span className=\"px-1\" style={{ color: \"white\" }}>\r\n                              {m.vote_average}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"align-self-end\"></div>\r\n                        </Card.Body>\r\n                        <Card.Text className=\"p-2  align-self-center w-100\">\r\n                          <div className=\"d-flex justify-content-between align-items-start\">\r\n                            <div className=\"mx-auto\">{m.original_title}</div>\r\n\r\n                            <FavBtn\r\n                              movieInfo={m}\r\n                              movieId={m.id}\r\n                              userFrom={localStorage.getItem(\"userId\")}\r\n                            />\r\n                          </div>\r\n                        </Card.Text>\r\n                      </div>\r\n                    </Card>\r\n                  </Col>\r\n                </div>\r\n              );\r\n            })}\r\n        </Row>\r\n        <Pagination className=\"mt-4 justify-content-center\">\r\n          <Pagination.Prev\r\n            disabled={activePage == 1}\r\n            onClick={() => {\r\n              if (activePage == paginate[0]) {\r\n                setPaginate((p) => p.map((i) => i - 4));\r\n              }\r\n              setActive((p) => p - 1);\r\n              document.body.scrollTop = 0;\r\n              document.documentElement.scrollTop = 0;\r\n            }}\r\n          />\r\n          <Pagination.Item\r\n            active={activePage === 1}\r\n            activeLabel=\"\"\r\n            onClick={() => {\r\n              setActive(1);\r\n              document.body.scrollTop = 0;\r\n              document.documentElement.scrollTop = 0;\r\n            }}\r\n          >\r\n            {1}\r\n          </Pagination.Item>\r\n          <Pagination.Ellipsis disabled />\r\n\r\n          {paginate.map((p, i) => {\r\n            return (\r\n              <Pagination.Item\r\n                key={i}\r\n                activeLabel=\"\"\r\n                active={p == activePage}\r\n                onClick={(e) => {\r\n                  setActive(e.target.innerText);\r\n                  document.body.scrollTop = 0;\r\n                  document.documentElement.scrollTop = 0;\r\n                }}\r\n              >\r\n                {p}\r\n              </Pagination.Item>\r\n            );\r\n          })}\r\n          <Pagination.Ellipsis disabled />\r\n          <Pagination.Item\r\n            activeLabel=\"\"\r\n            active={activePage === 500}\r\n            onClick={() => {\r\n              setActive(500);\r\n              document.body.scrollTop = 0;\r\n              document.documentElement.scrollTop = 0;\r\n            }}\r\n          >\r\n            {500}\r\n          </Pagination.Item>\r\n          <Pagination.Next\r\n            disabled={activePage == 500}\r\n            onClick={() => {\r\n              if (activePage == paginate[paginate.length - 1]) {\r\n                setPaginate((p) => p.map((i) => i + 4));\r\n              }\r\n              setActive((p) => p + 1);\r\n              document.body.scrollTop = 0;\r\n              document.documentElement.scrollTop = 0;\r\n            }}\r\n          />\r\n        </Pagination>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\")\r\n    ? localStorage.getItem(\"rememberMe\")\r\n    : \"\";\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then((response) => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem(\"userId\", response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem(\"rememberMe\", values.id);\r\n                } else {\r\n                  localStorage.removeItem(\"rememberMe\");\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage(\"Check out your Account or Password again\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              setFormErrorMessage(\"Check out your Account or Password again\");\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\");\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Log In</h2>\r\n            {formErrorMessage && (\r\n              <label>\r\n                <p\r\n                  style={{\r\n                    color: \"#ff0000bf\",\r\n                    fontSize: \"0.7rem\",\r\n                    border: \"1px solid\",\r\n                    padding: \"1rem\",\r\n                    borderRadius: \"10px\",\r\n                  }}\r\n                >\r\n                  {formErrorMessage}\r\n                </p>\r\n              </label>\r\n            )}\r\n            <Form onSubmit={handleSubmit} style={{ width: \"350px\" }}>\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" required>\r\n                <Form.Control\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  placeholder=\"Email address\"\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <Form.Text className=\"input-feedback\">\r\n                    {errors.email}\r\n                  </Form.Text>\r\n                )}\r\n              </Form.Group>\r\n              <Form.Group\r\n                className=\"mb-3\"\r\n                controlId=\"formBasicPassword\"\r\n                required\r\n              >\r\n                <Form.Control\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <Form.Text className=\"input-feedback\">\r\n                    {errors.password}\r\n                  </Form.Text>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                <Form.Check\r\n                  id=\"rememberMe\"\r\n                  onChange={handleRememberMe}\r\n                  checked={rememberMe}\r\n                  type=\"checkbox\"\r\n                  label=\"Remember Me\"\r\n                />\r\n              </Form.Group>\r\n              <a\r\n                className=\"login-form-forgot\"\r\n                href=\"/reset_user\"\r\n                style={{ float: \"right\" }}\r\n              >\r\n                forgot password?\r\n              </a>\r\n              <Button\r\n                disabled={isSubmitting}\r\n                onSubmit={handleSubmit}\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n              <br />\r\n              <div className=\"mt-4\">\r\n                Or <a href=\"/register\">register now!</a>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        lastName: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string().required(\"Name is required\"),\r\n        lastName: Yup.string().required(\"Last Name is required\"),\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Confirm Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form\r\n              style={{ minWidth: \"375px\" }}\r\n              onSubmit={handleSubmit}\r\n              required\r\n            >\r\n              <Form.Group className=\"mb-3\" required label=\"Name\">\r\n                <Form.Control\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <Form.Text className=\"input-feedback\">\r\n                    {errors.name}\r\n                  </Form.Text>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" required label=\"Last Name\">\r\n                <Form.Control\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <Form.Text className=\"input-feedback\">\r\n                    {errors.lastName}\r\n                  </Form.Text>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                className=\"mb-3\"\r\n                required\r\n                label=\"Email\"\r\n                hasValidation\r\n                isValid={errors.email && touched.email ? \"error\" : \"success\"}\r\n              >\r\n                <Form.Control\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <Form.Text className=\"input-feedback\">\r\n                    {errors.email}\r\n                  </Form.Text>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                className=\"mb-3\"\r\n                required\r\n                label=\"Password\"\r\n                isValid={\r\n                  errors.password && touched.password ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <Form.Control\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <Form.Text className=\"input-feedback\">\r\n                    {errors.password}\r\n                  </Form.Text>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" required label=\"Confirm\">\r\n                <Form.Control\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Confirm your Password\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <Form.Text className=\"input-feedback\">\r\n                    {errors.confirmPassword}\r\n                  </Form.Text>\r\n                )}\r\n              </Form.Group>\r\n\r\n              <Form.Group>\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form.Group>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { USER_SERVER } from \"../../../Config\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert(\"Log Out Failed\");\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Nav>\r\n        <Nav.Link href=\"/login\">Login</Nav.Link>\r\n        <Nav.Link href=\"/register\">Signup</Nav.Link>\r\n      </Nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <Nav>\r\n        <Nav.Link onClick={logoutHandler}>Logout</Nav.Link>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","import React from \"react\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\nimport RightMenu from \"./Sections/RightMenu\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Navbar bg=\"light\" expand=\"lg\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">\r\n          <img\r\n            alt=\"Logo\"\r\n            src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_square_2-d537fb228cf3ded904ef09b136fe3fec72548ebc1fea3fbbd1ad9e36364db38b.svg\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n          />{\" \"}\r\n          MoviesDB\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"/favourites\">Favourites</Nav.Link>\r\n            <Nav.Link href=\"/search\">Search</Nav.Link>\r\n          </Nav>\r\n          <RightMenu />\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Col, Row, Card } from \"react-bootstrap\";\r\nimport FavBtn from \"../LandingPage/FavBtn\";\r\nimport { BsFillStarFill } from \"react-icons/bs\";\r\nimport { IMG_URL } from \"../../Config.js\";\r\n\r\nfunction FavouritePage() {\r\n  const [Favourites, setFavourites] = useState([]);\r\n\r\n  function fetchFavourites() {\r\n    axios\r\n      .post(\"/api/favourite/getFavouriteMovies\", {\r\n        userFrom: localStorage.getItem(\"userId\"),\r\n      })\r\n      .then((response) => {\r\n        if (response.data.success) {\r\n          setFavourites(response.data.favourites);\r\n          console.log(response.data.favourites);\r\n        } else {\r\n          alert(\"Something went wrong...\");\r\n        }\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchFavourites();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"px-5 mb-4\">Your Favourites</h3>\r\n      <div className=\"px-5 \">\r\n        <Row lg={5} md={4} className=\"g-4 \">\r\n          {Favourites &&\r\n            Favourites.map((m, i) => {\r\n              const imgurl = IMG_URL + \"w500\" + m.movieImage;\r\n\r\n              return (\r\n                <div key={i}>\r\n                  <Col>\r\n                    <Card\r\n                      style={{\r\n                        boxShadow:\r\n                          \"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\",\r\n                      }}\r\n                    >\r\n                      <div className=\"d-flex flex-column\">\r\n                        <Card.Body\r\n                          variant=\"top\"\r\n                          className=\"d-flex flex-column justify-content-between\"\r\n                          style={{\r\n                            backgroundImage: `url(${imgurl})`,\r\n                            backgroundSize: \"cover\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                            height: \"320px\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"px-2 d-flex align-items-center\"\r\n                            style={{\r\n                              background: \"#22A1B1\",\r\n                              width: \"max-content\",\r\n                              borderRadius: \"5px\",\r\n                            }}\r\n                          >\r\n                            <BsFillStarFill style={{ color: \"yellow\" }} />\r\n\r\n                            <span className=\"px-1\" style={{ color: \"white\" }}>\r\n                              {m.movieRating}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"align-self-end\"></div>\r\n                        </Card.Body>\r\n                        <Card.Text className=\"p-2  align-self-center w-100\">\r\n                          <div\r\n                            className=\"d-flex justify-content-between align-items-start\"\r\n                            onClick={fetchFavourites}\r\n                          >\r\n                            <div className=\"mx-auto\">{m.movieTitle}</div>\r\n\r\n                            <FavBtn\r\n                              movieInfo={{\r\n                                movieId: m.movieId,\r\n                                movieTitle: m.movieTitle,\r\n                                movieImage: m.movieImage,\r\n                                movieRating: m.movieRating,\r\n                              }}\r\n                              movieId={m.movieId}\r\n                              userFrom={localStorage.getItem(\"userId\")}\r\n                            />\r\n                          </div>\r\n                        </Card.Text>\r\n                      </div>\r\n                    </Card>\r\n                  </Col>\r\n                </div>\r\n              );\r\n            })}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavouritePage;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { API_KEY, API_URL } from \"../../Config.js\";\r\n\r\nvar fetchingQuery;\r\nfunction Search({ setSearches }) {\r\n  const cq = useRef();\r\n\r\n  function fetchQuery() {\r\n    fetch(\r\n      `${API_URL}search/multi?api_key=${API_KEY}&language=en-US&query=${encodeURIComponent(\r\n        cq.current.value\r\n      )}&page=1&include_adult=false`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setSearches(response.results);\r\n        console.log(response.results);\r\n        console.log(cq.current.value);\r\n      });\r\n  }\r\n\r\n  function handleFocus() {\r\n    fetchingQuery = setInterval(fetchQuery, 2000);\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-5 mx-auto\">\r\n      <Form>\r\n        <Form.Group className=\"mb-3\" controlId=\"query\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            ref={cq}\r\n            placeholder=\"Search movie/tv-show/people\"\r\n            onFocus={handleFocus}\r\n            onBlur={() => {\r\n              clearInterval(fetchingQuery);\r\n              cq.current.value = \"\";\r\n            }}\r\n          />\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from \"react\";\r\nimport Search from \"./Search\";\r\nimport { Card, Col, Pagination, Row } from \"react-bootstrap\";\r\nimport { BsFillStarFill } from \"react-icons/bs\";\r\nimport { API_KEY, API_URL, IMG_URL } from \"../../Config.js\";\r\nimport FavBtn from \"../LandingPage/FavBtn\";\r\n\r\nfunction SearchPage() {\r\n  const [Movies, setSearches] = useState([]);\r\n  var info;\r\n  return (\r\n    <div>\r\n      <Search setSearches={setSearches} />\r\n      <h3 className=\"px-5 mb-4\">Search Results</h3>\r\n      <div className=\"px-5 \">\r\n        <Row lg={5} md={4} className=\"g-4 \">\r\n          {Movies ? (\r\n            Movies.map((m, i) => {\r\n              const imgurl = IMG_URL + \"w500\";\r\n\r\n              return (\r\n                <div key={i}>\r\n                  <Col>\r\n                    <Card\r\n                      style={{\r\n                        boxShadow:\r\n                          \"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\",\r\n                      }}\r\n                    >\r\n                      <div className=\"d-flex flex-column\">\r\n                        <Card.Body\r\n                          variant=\"top\"\r\n                          className=\"d-flex flex-column justify-content-between\"\r\n                          style={{\r\n                            backgroundImage: `url(${\r\n                              imgurl + (m.poster_path || m.profile_path)\r\n                            }),url(\"http://placehold.it/350x350\")`,\r\n                            backgroundSize: \"cover\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                            height: \"320px\",\r\n                          }}\r\n                        >\r\n                          <div\r\n                            className=\"px-2 d-flex align-items-center\"\r\n                            style={{\r\n                              background: \"#22A1B1\",\r\n                              width: \"max-content\",\r\n                              borderRadius: \"5px\",\r\n                            }}\r\n                          >\r\n                            {m.media_type !== \"person\" ? (\r\n                              <BsFillStarFill style={{ color: \"yellow\" }} />\r\n                            ) : null}\r\n\r\n                            <span className=\"px-1\" style={{ color: \"white\" }}>\r\n                              {m.vote_average ||\r\n                                m.known_for_department ||\r\n                                \"N-A\"}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"align-self-end\"></div>\r\n                        </Card.Body>\r\n                        <Card.Text className=\"p-2  align-self-center w-100\">\r\n                          <div className=\"d-flex justify-content-between align-items-start\">\r\n                            <div className=\"mx-auto\">\r\n                              {m.original_title || m.name}\r\n                            </div>\r\n\r\n                            {m.media_type === \"movie\" && (\r\n                              <FavBtn\r\n                                movieInfo={m}\r\n                                movieId={m.id}\r\n                                userFrom={localStorage.getItem(\"userId\")}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                        </Card.Text>\r\n                      </div>\r\n                    </Card>\r\n                  </Col>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <Col>\r\n              <div>\"Start typing in search bar to see results\"</div>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import React, { Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport FavouritePage from \"./views/FavouritePage/FavouritePage.js\";\r\nimport SearchPage from \"./views/SearchPage/SearchPage\";\r\n\r\n//null   Anyone Can go inside\r\n//true   only logged in user can go inside\r\n//false  logged in user can't go inside\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <NavBar />\r\n      <div style={{ paddingTop: \"50px\", minHeight: \"calc(100vh - 80px)\" }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, null)} />\r\n          <Route\r\n            exact\r\n            path=\"/favourites\"\r\n            component={Auth(FavouritePage, true)}\r\n          />\r\n          <Route exact path=\"/search\" component={Auth(SearchPage, null)} />\r\n        </Switch>\r\n      </div>\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"core-js\";\r\nimport React from \"react\";\r\nimport \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/ie9\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport promiseMiddleware from \"redux-promise\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport App from \"./components/App\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Reducer from \"./_reducers\";\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  promiseMiddleware,\r\n  ReduxThunk\r\n)(createStore);\r\n\r\nReactDOM.render(\r\n  <Provider\r\n    store={createStoreWithMiddleware(\r\n      Reducer,\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )}\r\n  >\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}